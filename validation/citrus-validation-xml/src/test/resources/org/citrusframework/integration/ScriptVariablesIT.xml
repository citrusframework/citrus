<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">
  <testcase name="ScriptVariablesIT">
    <meta-info>
      <author>Jan Lipphaus</author>
      <creationdate>2010-08-19</creationdate>
      <status>FINAL</status>
      <last-updated-by>Jan Lipphaus</last-updated-by>
      <last-updated-on>2010-08-19T17:25:00</last-updated-on>
    </meta-info>

    <description>
      This test shows the usage of inline scripts (e.g. groovy) for the creation of variable values.
      The result of the last operation in the script (e.g. return) will be the value for the variable.
    </description>

    <variables>
      <variable name="avg">
        <value>
          <script type="groovy">
            <![CDATA[
                a = 4
                b = 6
                return (a + b) / 2
            ]]>
          </script>
        </value>
      </variable>
      <variable name="hello">
        <value>
          <script type="groovy">
            <![CDATA[
                return "Hello Citrus"
            ]]>
          </script>
        </value>
      </variable>
      <variable name="sum">
        <value>
          <script type="groovy">
            <![CDATA[
                (5 + 6)
            ]]>
          </script>
        </value>
      </variable>
    </variables>

    <actions>
      <send endpoint="helloEndpoint">
        <message>
          <data>
            <![CDATA[
            <xml>
              <message>${avg}</message>
              <message>${hello}</message>
              <message>${sum}</message>
              <message>${hello} ${avg}</message>
            </xml>
            ]]>
          </data>
        </message>
        <header>
          <element name="operation" value="Greetings"/>
        </header>
      </send>

      <receive endpoint="helloEndpoint">
        <message>
          <data>
            <![CDATA[
            <xml>
              <message>5</message>
              <message>Hello Citrus</message>
              <message>11</message>
              <message>Hello Citrus 5</message>
            </xml>
            ]]>
          </data>
        </message>
        <header>
          <element name="operation" value="Greetings"/>
        </header>
      </receive>
    </actions>
  </testcase>
</spring:beans>
