swagger: '2.0'
info:
    description: 'This is a modified Petstore server, that uses the reserved word "name" as parameter name. This should be renamed to "_name" in the generated code.'
    version: 1.0.0
    title: OpenAPI Petstore
    license:
        name: Apache-2.0
        url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
    - name: pet
      description: Everything about your Pets
schemes:
    - http
paths:
    /pet/findByName:
        get:
            tags:
                - pet
            summary: Finds Pet by name
            description: Name can be any text
            operationId: findPetByName
            produces:
                - application/xml
                - application/json
            parameters:
                # name is a reserved word and should be masked with an '_' in the generated api
                - name: name
                  in: query
                  description: Name of the pet
                  required: true
                  type: string
            responses:
                '200':
                    description: successful operation
                    schema:
                        $ref: '#/definitions/Pet'
                '400':
                    description: Invalid name value
            security:
                - petstore_auth:
                      - 'write:pets'
                      - 'read:pets'
securityDefinitions:
    petstore_auth:
        type: oauth2
        authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
        flow: implicit
        scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
        type: apiKey
        name: api_key
        in: header
definitions:
    Category:
        title: Pet category
        description: A category for a pet
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Category
    Tag:
        title: Pet Tag
        description: A tag for a pet
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Tag
    Pet:
        title: a Pet
        description: A pet for sale in the pet store
        type: object
        required:
            - name
            - photoUrls
        properties:
            id:
                type: integer
                format: int64
            category:
                $ref: '#/definitions/Category'
            name:
                type: string
                example: doggie
            photoUrls:
                type: array
                xml:
                    name: photoUrl
                    wrapped: true
                items:
                    type: string
            tags:
                type: array
                xml:
                    name: tag
                    wrapped: true
                items:
                    $ref: '#/definitions/Tag'
            status:
                type: string
                description: pet status in the store
                enum:
                    - available
                    - pending
                    - sold
        xml:
            name: Pet
