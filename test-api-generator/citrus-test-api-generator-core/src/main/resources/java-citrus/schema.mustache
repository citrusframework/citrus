{{!

  Copyright the original author or authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}
<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns="{{{targetXmlnsNamespace}}}"
   xmlns:http="http://www.citrusframework.org/schema/http/testcase"
   targetNamespace="{{{targetXmlnsNamespace}}}"
   elementFormDefault="qualified">

    <xs:import
        namespace="http://www.citrusframework.org/schema/http/testcase"
        schemaLocation="http://www.citrusframework.org/schema/http/testcase/citrus-http-testcase.xsd"
    />

    <xs:complexType name="AbstractTestApiSendRequestWithoutBodyType">
        <xs:sequence>
            <xs:element name="param" minOccurs="0" maxOccurs="unbounded" type="http:ParamType"/>
            <xs:element name="headers" minOccurs="0" type="http:RequestHeadersType"/>
            <xs:element name="extract" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="name" type="xs:string" use="required"/>
                                <xs:attribute name="variable" type="xs:string" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="client" type="xs:string"/>
        <xs:attribute name="uri" type="xs:string"/>
        <xs:attribute name="actor" type="xs:string"/>
        <xs:attribute name="fork" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="AbstractTestApiReceiveResponseType">
        <xs:complexContent>
            <xs:extension base="http:ClientReceiveResponseType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AbstractTestApiSendRequestWithBodyType">
        <xs:complexContent>
            <xs:extension base="AbstractTestApiSendRequestWithoutBodyType">
                <xs:sequence>
                    {{^isMultipart}}
                    <xs:element ref="abstract-body" minOccurs="{{#required}}1{{/required}}{{^required}}0{{/required}}">
                        <xs:annotation>
                            <xs:documentation>
                                <b>{{^required}}Optional {{/required}}Body - {{summary}}</b>{{#description}}
                                <p>{{description}}</p>{{/description}}
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    {{/isMultipart}}
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="abstract-body" abstract="true" />
    <xs:element name="body" substitutionGroup="abstract-body">
        <xs:complexType>
            <xs:sequence>
                <xs:choice>
                    <xs:element name="payload">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="data" type="xs:string"/>
                    <xs:element name="resource">
                        <xs:complexType>
                            <xs:attribute name="file" type="xs:string" use="required"/>
                            <xs:attribute name="charset" type="xs:string"/>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
                <xs:element name="element" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="path" type="xs:string" use="required"/>
                        <xs:attribute name="value" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
            </xs:sequence>
            <xs:attribute name="schema-validation" type="xs:boolean" default="true"/>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="type" default="xml" type="xs:string"/>
            <xs:attribute name="data-dictionary" type="xs:string"/>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="ResponseOutputType">
        <xs:sequence minOccurs="0">
            <xs:choice minOccurs="0">
                <xs:element name="resource">
                    <xs:complexType>
                        <xs:attribute name="file" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="script">
                    <xs:complexType mixed="true">
                        <xs:attribute name="type" type="xs:string"/>
                    </xs:complexType>
                </xs:element>
                <xs:element name="json-path" maxOccurs="unbounded">
                    <xs:complexType>
                        <xs:attribute name="expression" type="xs:string" use="required"/>
                        <xs:attribute name="value" type="xs:string" use="required"/>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="accept-type" type="xs:string" default="*/*"/>
        <xs:attribute name="status" type="xs:int" default="200"/>
        <xs:attribute name="reason-phrase" type="xs:string" default="OK"/>
        <xs:attribute name="version" type="xs:string" default="HTTP/1.1"/>
        <xs:attribute name="type" default="json">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="xml"/>
                    <xs:enumeration value="xhtml"/>
                    <xs:enumeration value="csv"/>
                    <xs:enumeration value="json"/>
                    <xs:enumeration value="plaintext"/>
                    <xs:enumeration value="binary"/>
                    <xs:enumeration value="binary_base64"/>
                    <xs:enumeration value="gzip" />
                    <xs:enumeration value="gzip_base64" />
                    <xs:enumeration value="mscons" />
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    {{#apiInfo}}
    {{#apis}}
    {{#operations}}
    {{#operation}}

    <xs:complexType name="{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}RequestType">
        <xs:annotation>
            <xs:documentation>
                {{notes}}
                <b>{{operationId}}</b>
                <p>{{httpMethod}} {{{path}}}</p>
                <ul>
                {{#queryParams}}
                    <li><emph>{{paramName}}</emph> {{description}}</li>
                {{/queryParams}}
                {{#pathParams}}
                    <li><emph>{{baseName}}</emph> {{description}}</li>
                {{/pathParams}}
                {{#bodyParams}}
                    <li><emph>Body:</emph> {{description}}</li>
                {{/bodyParams}}
                {{#authMethods}}
                    {{#isBasicBasic}}
                    <li><emph>basicAuthUsername</emph> http basic authentication username</li>
                    <li><emph>basicAuthPassword</emph> http basic authentication password</li>
                    {{/isBasicBasic}}
                    {{#isBasicBearer}}
                    <li><emph>basicAuthBearer</emph> http basic authentication bearer token</li>
                    {{/isBasicBearer}}
                    {{#isApiKey}}
                    <li><emph>{{#lambda.camelcase}}{{keyParamName}}{{/lambda.camelcase}}</emph> {{#lambda.camelcase}}{{keyParamName}}{{/lambda.camelcase}} authentication token</li>
                    {{/isApiKey}}
                {{/authMethods}}
                {{#isMultipart}}
                {{#formParams}}
                    <li><emph>{{paramName}}</emph> {{description}}</li>
                {{/formParams}}
                {{/isMultipart}}
                </ul>
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="{{#bodyParam}}AbstractTestApiSendRequestWithBodyType{{/bodyParam}}{{^bodyParam}}AbstractTestApiSendRequestWithoutBodyType{{/bodyParam}}">
                <xs:sequence>
                    {{#queryParams}}
                        {{#isArray}}
                    <xs:element name="{{paramName}}" type="xs:string"{{^required}} minOccurs="0"{{/required}} maxOccurs="unbounded">
                        {{#description}}
                            <xs:annotation>
                                <xs:documentation>{{description}}</xs:documentation>
                            </xs:annotation>
                        {{/description}}
                    </xs:element>
                        {{/isArray}}
                    {{/queryParams}}
                    {{#headerParams}}
                        {{#isArray}}
                    <xs:element name="{{paramName}}" type="xs:string"{{^required}} minOccurs="0"{{/required}} maxOccurs="unbounded">
                        {{#description}}
                            <xs:annotation>
                                <xs:documentation>{{description}}</xs:documentation>
                            </xs:annotation>
                        {{/description}}
                    </xs:element>
                        {{/isArray}}
                    {{/headerParams}}
                    {{#pathParams}}
                        {{#isArray}}
                    <xs:element name="{{paramName}}" type="xs:string"{{^required}} minOccurs="0"{{/required}} maxOccurs="unbounded">
                        {{#description}}
                            <xs:annotation>
                                <xs:documentation>{{description}}</xs:documentation>
                            </xs:annotation>
                        {{/description}}
                    </xs:element>
                        {{/isArray}}
                    {{/pathParams}}
                    {{#formParams}}
                        {{#isArray}}
                    <xs:element name="{{paramName}}" type="xs:string"{{^required}} minOccurs="0"{{/required}} maxOccurs="unbounded">
                        {{#description}}
                            <xs:annotation>
                                <xs:documentation>{{description}}</xs:documentation>
                            </xs:annotation>
                        {{/description}}
                    </xs:element>
                        {{/isArray}}
                    {{/formParams}}
                    {{#cookieParams}}
                        {{#isArray}}
                            <xs:element name="{{paramName}}" type="xs:string"{{^required}} minOccurs="0"{{/required}} maxOccurs="unbounded">
                                {{#description}}
                                    <xs:annotation>
                                        <xs:documentation>{{description}}</xs:documentation>
                                    </xs:annotation>
                                {{/description}}
                            </xs:element>
                        {{/isArray}}
                    {{/cookieParams}}
                   <xs:element name="receive" minOccurs="0" type="{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}ResponseType"/>
                </xs:sequence>
                {{#queryParams}}
                    {{^isArray}}
                <xs:attribute name="{{paramName}}" type="xs:string"{{#required}} use="required"{{/required}}>
                    {{#description}}
                    <xs:annotation>
                        <xs:documentation>{{description}}</xs:documentation>
                    </xs:annotation>
                    {{/description}}
                </xs:attribute>
                    {{/isArray}}
                {{/queryParams}}
                {{#headerParams}}
                    {{^isArray}}
                <xs:attribute name="{{paramName}}" type="xs:string"{{#required}} use="required"{{/required}}>
                    {{#description}}
                        <xs:annotation>
                            <xs:documentation>{{description}}</xs:documentation>
                        </xs:annotation>
                    {{/description}}
                </xs:attribute>
                    {{/isArray}}
                {{/headerParams}}
                {{#pathParams}}
                    {{^isArray}}
                <xs:attribute name="{{paramName}}" type="xs:string"{{#required}} use="required"{{/required}}>
                    {{#description}}
                    <xs:annotation>
                        <xs:documentation>{{description}}</xs:documentation>
                    </xs:annotation>
                    {{/description}}
                </xs:attribute>
                    {{/isArray}}
                {{/pathParams}}
                {{#formParams}}
                    {{^isArray}}
                <xs:attribute name="{{paramName}}" type="xs:string"{{#required}} use="required"{{/required}}>
                    {{#description}}
                    <xs:annotation>
                        <xs:documentation>{{description}}</xs:documentation>
                    </xs:annotation>
                    {{/description}}
                </xs:attribute>
                    {{/isArray}}
                {{/formParams}}
                {{#cookieParams}}
                    {{^isArray}}
                        <xs:attribute name="{{paramName}}" type="xs:string"{{#required}} use="required"{{/required}}>
                            {{#description}}
                            <xs:annotation>
                                <xs:documentation>{{description}}</xs:documentation>
                            </xs:annotation>
                            {{/description}}
                        </xs:attribute>
                    {{/isArray}}
                {{/cookieParams}}
                {{#authMethods}}
                    {{#isBasicBasic}}
                <xs:attribute name="basicAuthUsername" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>http basic authentication username</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="basicAuthPassword" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>http basic authentication password</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                    {{/isBasicBasic}}
                    {{#isBasicBearer}}
                <xs:attribute name="basicAuthBearer" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>http basic authentication bearer token</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                    {{/isBasicBearer}}
                    {{#isApiKey}}
                <xs:attribute name="{{#lambda.camelcase}}{{keyParamName}}{{/lambda.camelcase}}" type="xs:string">
                    {{#description}}
                    <xs:annotation>
                        <xs:documentation>{{description}}</xs:documentation>
                    </xs:annotation>
                    {{/description}}
                </xs:attribute>
                    {{/isApiKey}}
                {{/authMethods}}
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}ResponseType">
        <xs:annotation>
            <xs:documentation>
                {{notes}}
                <b>{{operationId}}</b>
                <p>{{httpMethod}} {{{path}}}</p>
                <ul>
                    {{#queryParams}}
                    <li><emph>{{paramName}}</emph> {{description}}</li>
                    {{/queryParams}}
                    {{#pathParams}}
                    <li><emph>{{baseName}}</emph> {{description}}</li>
                    {{/pathParams}}
                    {{#bodyParams}}
                    <li><emph>Body:</emph> {{description}}</li>
                    {{/bodyParams}}
                    {{#isMultipart}}
                        {{#formParams}}
                    <li><emph>{{paramName}}</emph> {{description}}</li>
                        {{/formParams}}
                    {{/isMultipart}}
                </ul>
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="AbstractTestApiReceiveResponseType">
                {{#responses}}
                    {{#-first}}
                <xs:attribute name="responseCode">
                    <xs:annotation>
                        <xs:documentation>
                            An enumeration of all specified API response codes.
                        </xs:documentation>
                    </xs:annotation>
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                        {{/-first}}
                            <xs:enumeration value="{{code}}">
                                <xs:annotation>
                                    <xs:documentation>
                                        {{#message}}
                                        Message: {{message}}<br/>
                                        {{/message}}
                                        {{#dataType}}
                                        Datatype: {{dataType}}<br/>
                                        {{/dataType}}
                                    </xs:documentation>
                                </xs:annotation>
                            </xs:enumeration>
                        {{#-last}}
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                    {{/-last}}
                {{/responses}}

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    {{/operation}}
    {{/operations}}
    {{/apis}}
    {{#apis}}
    {{#operations}}
    {{#operation}}

    <xs:element name="send-{{#lambda.kebabcase}}{{operationId}}{{/lambda.kebabcase}}" type="{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}RequestType"/>
    <xs:element name="receive-{{#lambda.kebabcase}}{{operationId}}{{/lambda.kebabcase}}" type="{{#lambda.titlecase}}{{operationId}}{{/lambda.titlecase}}ResponseType"/>
    {{/operation}}
    {{/operations}}
    {{/apis}}
    {{/apiInfo}}
</xs:schema>
