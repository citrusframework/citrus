{{>licenseInfo}}

package {{package}};

import java.util.HashMap;
import java.util.Map;
import org.citrusframework.http.client.HttpClient;
import org.citrusframework.openapi.OpenApiSpecification;
import org.citrusframework.openapi.generator.TestApiClientRequestActionBuilder;
import org.citrusframework.openapi.generator.rest.petstore.model.Pet;
import org.citrusframework.testapi.GeneratedApi;

import {{invokerPackage}}.citrus.{{prefix}}AbstractSendAction;

{{>additionalModelTypeAnnotations}}{{>generatedAnnotation}}{{#discriminator}}{{>typeInfoAnnotation}}{{/discriminator}}{{>xmlAnnotation}}
public class {{classname}} implements GeneratedApi
{

    public static final {{classname}} INSTANCE = new {{classname}}();

    private HttpClient httpClient
    private OpenApiSpecification openApiSpecification = null;


    public String getApiTitle() {
    return "{{appName}}";
    }

    public String getApiVersion() {
    return "{{appVersion}}";
    }

    public String getApiPrefix() {
    return "{{prefix}}";
    }

    public static PetApi openApiPetStore(HttpClient httpClient) {
        return new PetApi();
    }

    public Map<String,String> getApiInfoExtensions() {
        Map<String, String> infoExtensionMap = new HashMap<>();
        {{#infoExtensions}}
            {{#entrySet}}
            infoExtensionMap.put("{{key}}", "{{value}}");
            {{/entrySet}}
        {{/infoExtensions}}
        return infoExtensionMap;
    }

{{#operations}}
    {{#operation}}
    public {{operationIdCamelCase}}ActionBuilder {{operationId}}({{#requiredParams}}{{dataType}} {{paramName}}{{^-last}}, {{/-last}}{{/requiredParams}})   {
        return new {{operationIdCamelCase}}ActionBuilder({{#requiredParams}}{{paramName}}{{^-last}}, {{/-last}}{{/requiredParams}});
    }
    {{^-last}}

    {{/-last}}
    {{/operation}}
{{/operations}}

{{#operations}}
    {{#operation}}
    public class {{operationIdCamelCase}}ActionBuilder extends TestApiClientRequestActionBuilder {

        private static final String METHOD = "{{httpMethod}}";

        private static final String ENDPOINT = "{{path}}";

        private static final String OPERATION_NAME = "{{operationId}}";

        public {{operationIdCamelCase}}ActionBuilder({{#requiredParams}}{{dataType}} {{paramName}}{{^-last}}, {{/-last}}{{/requiredParams}}) {
            super(openApiSpecification, METHOD, ENDPOINT, OPERATION_NAME);
            {{#requiredParams}}
            {{#isQueryParam}}
            queryParam("{{paramName}}", {{paramName}});
            {{/isQueryParam}}
            {{#isPathParam}}
            pathParam("{{paramName}}", {{paramName}});
            {{/isPathParam}}
            {{#isHeaderParam}}
            headerParam("{{paramName}}", {{paramName}});
            {{/isHeaderParam}}
            {{#isFormParam}}
            formParam("{{paramName}}", {{paramName}});
            {{/isFormParam}}
            {{/requiredParams}}
        }

        {{#optionalParams}}
        public {{operationIdCamelCase}}ActionBuilder with{{#lambda.titlecase}}{{baseName}}{{/lambda.titlecase}}(String {{paramName}}) {
            {{#isQueryParam}}
                queryParam("{{baseName}}", {{paramName}});
            {{/isQueryParam}}
            {{#isPathParam}}
                pathParam("{{baseName}}", {{paramName}});
            {{/isPathParam}}
            {{#isHeaderParam}}
                headerParam("{{baseName}}", {{paramName}});
            {{/isHeaderParam}}
            {{#isFormParam}}
                formParam("{{baseName}}", {{paramName}});
            {{/isFormParam}}
            return this;
        }
        {{^-last}}

        {{/-last}}
        {{/optionalParams}}
    }
    {{^-last}}

    {{/-last}}
    {{/operation}}
{{/operations}}
}