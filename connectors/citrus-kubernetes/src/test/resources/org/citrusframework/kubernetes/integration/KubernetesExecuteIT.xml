<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase"
              xmlns:spring="http://www.springframework.org/schema/beans"
              xmlns:k8s="http://www.citrusframework.org/schema/kubernetes/testcase"
              xmlns:http="http://www.citrusframework.org/schema/http/testcase"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:schemaLocation="http://www.springframework.org/schema/beans 
                                  http://www.springframework.org/schema/beans/spring-beans.xsd
                                  http://www.citrusframework.org/schema/kubernetes/testcase
                                  http://www.citrusframework.org/schema/kubernetes/testcase/citrus-kubernetes-testcase.xsd
                                  http://www.citrusframework.org/schema/http/testcase
                                  http://www.citrusframework.org/schema/http/testcase/citrus-http-testcase.xsd
                                  http://www.citrusframework.org/schema/testcase 
                                  http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">

  <testcase name="KubernetesExecuteIT">
    <meta-info>
      <author>Christoph Deppisch</author>
      <creationdate>2016-12-15</creationdate>
      <status>FINAL</status>
      <last-updated-by>Christoph Deppisch</last-updated-by>
      <last-updated-on>2016-12-15T00:00:00</last-updated-on>
    </meta-info>

    <description>Test kubernetes container command execution with kubernetes client.</description>

    <variables>
      <variable name="podLabel" value="run=hello-minikube"/>
    </variables>

    <actions>
      <echo>
        <message>Validate kubernetes API version</message>
      </echo>

      <k8s:info>
        <k8s:validate>
          <k8s:result>{
            "result": {
              "clientVersion": "1.4.34",
              "apiVersion": "${apiVersion}",
              "kind":"Info",
              "masterUrl": "https://${minikube}:8443/",
              "namespace": "${namespace}"
            }
          }</k8s:result>
        </k8s:validate>
      </k8s:info>

      <echo>
        <message>List all pods</message>
      </echo>

      <k8s:list-pods>
        <k8s:validate>
          <k8s:result>{
            "result": {
              "apiVersion":"${apiVersion}",
              "kind":"PodList",
              "metadata":"@ignore@",
              "items":[{
                "apiVersion":"${apiVersion}",
                "kind":"Pod",
                "metadata":"@ignore@",
                "spec":{
                  "containers":[
                    {
                      "args":[],
                      "command":[],
                      "env":[],
                      "image":"gcr.io/google_containers/echoserver:1.4",
                      "imagePullPolicy":"IfNotPresent",
                      "name":"hello-minikube",
                      "ports":[{
                        "containerPort":8080,
                        "protocol":"TCP"
                      }],
                      "resources":{},
                      "terminationMessagePath":"/dev/termination-log",
                      "volumeMounts":"@ignore@"
                    }
                  ],
                  "dnsPolicy":"ClusterFirst",
                  "imagePullSecrets":[],
                  "nodeName":"minikube",
                  "restartPolicy":"Always",
                  "securityContext":{"supplementalGroups":[]},
                  "serviceAccount":"default",
                  "serviceAccountName":"default",
                  "terminationGracePeriodSeconds":30,
                  "volumes":"@ignore@"
                },
                "status": "@ignore@"
              }]
            }
          }</k8s:result>
          <k8s:element path="$.result.items.size()" value="1"/>
          <k8s:element path="$..status.phase" value="Running"/>
          <k8s:element path="$..metadata.name" value="@variable('podName')@"/>
        </k8s:validate>
      </k8s:list-pods>

      <echo>
        <message>List all services</message>
      </echo>

      <k8s:list-services>
        <k8s:validate>
          <k8s:result>{
            "result": {
              "apiVersion":"${apiVersion}",
              "kind":"ServiceList",
              "metadata":"@ignore@",
              "items":"@ignore@"
            }
          }</k8s:result>
          <k8s:element path="$.result.items.size()" value="2"/>
        </k8s:validate>
      </k8s:list-services>

      <echo>
        <message>Get hello-minikube service by name</message>
      </echo>

      <k8s:get-service name="hello-minikube">
        <k8s:validate>
          <k8s:result>{
            "result": {
              "apiVersion":"${apiVersion}",
              "kind":"Service",
              "metadata": {
                "creationTimestamp":"@ignore@",
                "finalizers":[],
                "labels": {
                  "run":"hello-minikube"
                },
                "name":"hello-minikube",
                "namespace":"default",
                "ownerReferences":[],
                "resourceVersion":"@ignore@",
                "selfLink":"/api/${apiVersion}/namespaces/default/services/hello-minikube",
                "uid":"@ignore@"
              },
              "spec": {
                "clusterIP":"@ignore@",
                "deprecatedPublicIPs":[],
                "externalIPs":[],
                "loadBalancerSourceRanges":[],
                "ports":[{
                  "nodePort":"@variable('servicePort')@",
                  "port":8080,
                  "protocol":"TCP",
                  "targetPort":8080
                }],
                "selector": {
                  "run":"hello-minikube"
                },
                "sessionAffinity":"None",
                "type":"NodePort"
              },
              "status":"@ignore@"
            }
          }</k8s:result>
        </k8s:validate>
      </k8s:get-service>

      <echo>
        <message>Invoke hello-minikube pod service</message>
      </echo>

      <http:send-request uri="http://${minikube}:${servicePort}/hello">
        <http:POST>
          <http:headers content-type="text/plain"/>
          <http:body type="plaintext">
            <http:data>Hello</http:data>
          </http:body>
        </http:POST>
      </http:send-request>

      <http:receive-response uri="http://${minikube}:${servicePort}/hello">
        <http:headers status="200" reason-phrase="OK"/>
        <http:body type="plaintext">
          <http:data>@endsWith('Hello')@</http:data>
        </http:body>
      </http:receive-response>

      <echo>
        <message>List all endpoints</message>
      </echo>

      <k8s:list-endpoints>
        <k8s:validate>
          <k8s:result>{
            "result": {
              "apiVersion":"${apiVersion}",
              "kind":"EndpointsList",
              "metadata":"@ignore@",
              "items":"@ignore@"
            }
          }</k8s:result>
          <k8s:element path="$.result.items.size()" value="2"/>
        </k8s:validate>
      </k8s:list-endpoints>
      <k8s:list-events/>

      <echo>
        <message>Get hello-minikube pod by '${podName}'</message>
      </echo>

      <k8s:get-pod name="${podName}">
        <k8s:validate>
          <k8s:result>{
            "result": {
              "apiVersion":"${apiVersion}",
              "kind":"Pod",
              "metadata": {
                  "annotations":"@ignore@",
                  "creationTimestamp":"@ignore@",
                  "finalizers":[],
                  "generateName":"@startsWith('hello-minikube-')@",
                  "labels":{
                    "pod-template-hash":"@ignore@",
                    "run":"hello-minikube"
                  },
                  "name":"${podName}",
                  "namespace":"default",
                  "ownerReferences":"@ignore@",
                  "resourceVersion":"@ignore@",
                  "selfLink":"/api/${apiVersion}/namespaces/default/pods/${podName}",
                  "uid":"@ignore@"
              },
              "spec": {
                "containers": [{
                  "args":[],
                  "command":[],
                  "env":[],
                  "image":"gcr.io/google_containers/echoserver:1.4",
                  "imagePullPolicy":"IfNotPresent",
                  "name":"hello-minikube",
                  "ports":[{
                    "containerPort":8080,
                    "protocol":"TCP"
                  }],
                  "resources":{},
                  "terminationMessagePath":"/dev/termination-log",
                  "volumeMounts":"@ignore@"
                }],
                "dnsPolicy":"ClusterFirst",
                "imagePullSecrets":"@ignore@",
                "nodeName":"minikube",
                "restartPolicy":"Always",
                "securityContext":"@ignore@",
                "serviceAccount":"default",
                "serviceAccountName":"default",
                "terminationGracePeriodSeconds":30,
                "volumes":"@ignore@"
              },
              "status": "@ignore@"
            }
          }</k8s:result>
          <k8s:element path="$..status.phase" value="Running"/>
        </k8s:validate>
      </k8s:get-pod>

    </actions>

  </testcase>
</spring:beans>
