<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2006-2015 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.citrusframework.org/schema/http/testcase"
           targetNamespace="http://www.citrusframework.org/schema/http/testcase"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

  <xs:element name="description" type="xs:string"/>

  <xs:element name="send-request">
    <xs:annotation>
      <xs:documentation>Sends Http request as client to server.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element name="GET" type="ClientRequestType"/>
          <xs:element name="POST" type="ClientRequestType"/>
          <xs:element name="PUT" type="ClientRequestType"/>
          <xs:element name="DELETE" type="ClientRequestType"/>
          <xs:element name="HEAD" type="ClientRequestType"/>
          <xs:element name="OPTIONS" type="ClientRequestType"/>
          <xs:element name="TRACE" type="ClientRequestType"/>
          <xs:element name="PATCH" type="ClientRequestType"/>
        </xs:choice>
        <xs:element name="extract" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="variable" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="client" type="xs:string"/>
      <xs:attribute name="uri" type="xs:string"/>
      <xs:attribute name="actor" type="xs:string"/>
      <xs:attribute name="fork" type="xs:boolean"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="receive-response">
    <xs:annotation>
      <xs:documentation>Received Http response as client from server.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element name="selector" minOccurs="0">
          <xs:complexType>
            <xs:choice>
              <xs:element name="value" type="xs:string"/>
              <xs:element name="element" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:element name="headers" minOccurs="0">
          <xs:complexType>
            <xs:complexContent>
              <xs:extension base="ResponseHeadersType">
                <xs:attribute name="ignore-case" type="xs:string"/>
              </xs:extension>
            </xs:complexContent>
          </xs:complexType>
        </xs:element>
        <xs:element name="body" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:choice minOccurs="0">
                <xs:element name="payload">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="data" type="xs:string"/>
                <xs:element name="resource">
                  <xs:complexType>
                    <xs:attribute name="file" type="xs:string" use="required"/>
                    <xs:attribute name="charset" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
              <xs:element name="validate" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="script" minOccurs="0">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="type" use="required">
                              <xs:simpleType>
                                <xs:restriction base="xs:string">
                                  <xs:enumeration value="groovy"/>
                                </xs:restriction>
                              </xs:simpleType>
                            </xs:attribute>
                            <xs:attribute name="file" type="xs:string"/>
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="xpath" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="expression" type="xs:string" use="required"/>
                        <xs:attribute name="value" type="xs:string" use="required"/>
                        <xs:attribute name="result-type">
                          <xs:simpleType>
                            <xs:restriction base="xs:string">
                              <xs:enumeration value="node"/>
                              <xs:enumeration value="node-set"/>
                              <xs:enumeration value="boolean"/>
                              <xs:enumeration value="string"/>
                              <xs:enumeration value="number"/>
                            </xs:restriction>
                          </xs:simpleType>
                        </xs:attribute>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="json-path" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="expression" type="xs:string" use="required"/>
                        <xs:attribute name="value" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                    <xs:element name="namespace" minOccurs="0" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:attribute name="prefix" type="xs:string" use="required"/>
                        <xs:attribute name="value" type="xs:string" use="required"/>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                  <xs:attribute name="path" type="xs:string"/>
                  <xs:attribute name="value" type="xs:string"/>
                  <xs:attribute name="result-type">
                    <xs:simpleType>
                      <xs:restriction base="xs:string">
                        <xs:enumeration value="node"/>
                        <xs:enumeration value="node-set"/>
                        <xs:enumeration value="boolean"/>
                        <xs:enumeration value="string"/>
                        <xs:enumeration value="number"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:attribute>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="schema-validation" type="xs:boolean"/>
            <xs:attribute name="schema" type="xs:string"/>
            <xs:attribute name="schema-repository" type="xs:string"/>
            <xs:attribute name="validator" type="xs:string"/>
            <xs:attribute name="data-dictionary" type="xs:string"/>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="type" default="xml" type="xs:string"/>
          </xs:complexType>
        </xs:element>
        <xs:element name="extract" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="variable" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="body" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="path" type="xs:string" use="required"/>
                      <xs:attribute name="variable" type="xs:string" use="required"/>
                      <xs:attribute name="result-type">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="node"/>
                            <xs:enumeration value="node-set"/>
                            <xs:enumeration value="boolean"/>
                            <xs:enumeration value="string"/>
                            <xs:enumeration value="number"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="client" type="xs:string"/>
      <xs:attribute name="uri" type="xs:string"/>
      <xs:attribute name="timeout" type="xs:string"/>
      <xs:attribute name="actor" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="receive-request">
    <xs:annotation>
      <xs:documentation>Receives Http request as server.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="selector" minOccurs="0">
          <xs:complexType>
            <xs:choice>
              <xs:element name="value" type="xs:string"/>
              <xs:element name="element" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="value" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:choice>
          <xs:element name="GET" type="ServerRequestType"/>
          <xs:element name="POST" type="ServerRequestType"/>
          <xs:element name="PUT" type="ServerRequestType"/>
          <xs:element name="DELETE" type="ServerRequestType"/>
          <xs:element name="HEAD" type="ServerRequestType"/>
          <xs:element name="OPTIONS" type="ServerRequestType"/>
          <xs:element name="TRACE" type="ServerRequestType"/>
          <xs:element name="PATCH" type="ServerRequestType"/>
        </xs:choice>
        <xs:element name="extract" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:attribute name="name" type="xs:string" use="required"/>
                  <xs:attribute name="variable" type="xs:string" use="required"/>
                </xs:complexType>
              </xs:element>
              <xs:element name="body" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="path" type="xs:string" use="required"/>
                      <xs:attribute name="variable" type="xs:string" use="required"/>
                      <xs:attribute name="result-type">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="node"/>
                            <xs:enumeration value="node-set"/>
                            <xs:enumeration value="boolean"/>
                            <xs:enumeration value="string"/>
                            <xs:enumeration value="number"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="server" type="xs:string" use="required"/>
      <xs:attribute name="timeout" type="xs:string"/>
      <xs:attribute name="actor" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="send-response">
    <xs:annotation>
      <xs:documentation>Sends Http response as server to calling client.</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element name="headers" minOccurs="0" type="ResponseHeadersType"/>
        <xs:element name="body" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:choice>
                <xs:element name="payload">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="data" type="xs:string"/>
                <xs:element name="resource">
                  <xs:complexType>
                    <xs:attribute name="file" type="xs:string" use="required"/>
                    <xs:attribute name="charset" type="xs:string"/>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:sequence>
            <xs:attribute name="schema-validation" type="xs:boolean"/>
            <xs:attribute name="schema" type="xs:string"/>
            <xs:attribute name="schema-repository" type="xs:string"/>
            <xs:attribute name="name" type="xs:string"/>
            <xs:attribute name="type" default="xml" type="xs:string"/>
            <xs:attribute name="data-dictionary" type="xs:string"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="server" type="xs:string" use="required"/>
      <xs:attribute name="actor" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:complexType name="ClientRequestType">
    <xs:annotation>
      <xs:documentation>Http request type with parameters, headers and body.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="description" minOccurs="0"/>
      <xs:element name="param" minOccurs="0" maxOccurs="unbounded" type="ParamType"/>
      <xs:element name="headers" minOccurs="0" type="RequestHeadersType"/>
      <xs:element name="body" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice>
              <xs:element name="payload">
                <xs:complexType>
                  <xs:sequence>
                    <xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="data" type="xs:string"/>
              <xs:element name="resource">
                <xs:complexType>
                  <xs:attribute name="file" type="xs:string" use="required"/>
                  <xs:attribute name="charset" type="xs:string"/>
                </xs:complexType>
              </xs:element>
            </xs:choice>
            <xs:element name="element" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:attribute name="path" type="xs:string" use="required"/>
                <xs:attribute name="value" type="xs:string" use="required"/>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="schema-validation" type="xs:boolean"/>
          <xs:attribute name="schema" type="xs:string"/>
          <xs:attribute name="schema-repository" type="xs:string"/>
          <xs:attribute name="name" type="xs:string"/>
          <xs:attribute name="type" default="xml" type="xs:string"/>
          <xs:attribute name="data-dictionary" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="path" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ServerRequestType">
    <xs:annotation>
      <xs:documentation>Http request type with parameters, headers and body.</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element ref="description" minOccurs="0"/>
      <xs:element name="param" minOccurs="0" maxOccurs="unbounded" type="ParamType"/>
      <xs:element name="headers" minOccurs="0">
        <xs:complexType>
          <xs:complexContent>
            <xs:extension base="RequestHeadersType">
              <xs:attribute name="ignore-case" type="xs:string"/>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="body" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:choice minOccurs="0">
              <xs:element name="payload">
                <xs:complexType>
                  <xs:sequence>
                    <xs:any namespace="##other" processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="data" type="xs:string"/>
              <xs:element name="resource">
                <xs:complexType>
                  <xs:attribute name="file" type="xs:string" use="required"/>
                  <xs:attribute name="charset" type="xs:string"/>
                </xs:complexType>
              </xs:element>
            </xs:choice>
            <xs:element name="validate" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="script" minOccurs="0">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute name="type" use="required">
                            <xs:simpleType>
                              <xs:restriction base="xs:string">
                                <xs:enumeration value="groovy"/>
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:attribute>
                          <xs:attribute name="file" type="xs:string"/>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="xpath" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="expression" type="xs:string" use="required"/>
                      <xs:attribute name="value" type="xs:string" use="required"/>
                      <xs:attribute name="result-type">
                        <xs:simpleType>
                          <xs:restriction base="xs:string">
                            <xs:enumeration value="node"/>
                            <xs:enumeration value="node-set"/>
                            <xs:enumeration value="boolean"/>
                            <xs:enumeration value="string"/>
                            <xs:enumeration value="number"/>
                          </xs:restriction>
                        </xs:simpleType>
                      </xs:attribute>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="json-path" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="expression" type="xs:string" use="required"/>
                      <xs:attribute name="value" type="xs:string" use="required"/>
                    </xs:complexType>
                  </xs:element>
                  <xs:element name="namespace" minOccurs="0" maxOccurs="unbounded">
                    <xs:complexType>
                      <xs:attribute name="prefix" type="xs:string" use="required"/>
                      <xs:attribute name="value" type="xs:string" use="required"/>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:attribute name="path" type="xs:string"/>
                <xs:attribute name="value" type="xs:string"/>
                <xs:attribute name="result-type">
                  <xs:simpleType>
                    <xs:restriction base="xs:string">
                      <xs:enumeration value="node"/>
                      <xs:enumeration value="node-set"/>
                      <xs:enumeration value="boolean"/>
                      <xs:enumeration value="string"/>
                      <xs:enumeration value="number"/>
                    </xs:restriction>
                  </xs:simpleType>
                </xs:attribute>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="schema-validation" type="xs:boolean"/>
          <xs:attribute name="schema" type="xs:string"/>
          <xs:attribute name="schema-repository" type="xs:string"/>
          <xs:attribute name="validator" type="xs:string"/>
          <xs:attribute name="data-dictionary" type="xs:string"/>
          <xs:attribute name="name" type="xs:string"/>
          <xs:attribute name="type" default="xml" type="xs:string"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="path" type="xs:string"/>
    <xs:attribute name="context-path" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ParamType">
    <xs:annotation>
      <xs:documentation>Http request parameter definition</xs:documentation>
    </xs:annotation>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="value" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="RequestHeadersType">
    <xs:sequence>
      <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string"/>
          <xs:attribute name="value" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="cookie" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string" use="required"/>
          <xs:attribute name="value" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="content-type" type="xs:string"/>
    <xs:attribute name="accept" type="xs:string"/>
    <xs:attribute name="version" type="xs:string"/>
  </xs:complexType>

  <xs:complexType name="ResponseHeadersType">
    <xs:sequence>
      <xs:element name="header" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string"/>
          <xs:attribute name="value" type="xs:string"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="cookie" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:attribute name="name" type="xs:string" use="required"/>
          <xs:attribute name="value" type="xs:string" use="required"/>
          <xs:attribute name="max-age" type="xs:int"/>
          <xs:attribute name="path" type="xs:string"/>
          <xs:attribute name="version" type="xs:int"/>
          <xs:attribute name="domain" type="xs:string"/>
          <xs:attribute name="comment" type="xs:string"/>
          <xs:attribute name="secure" type="xs:boolean"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="status" type="xs:string"/>
    <xs:attribute name="reason-phrase" type="xs:string"/>
    <xs:attribute name="version" type="xs:string"/>
  </xs:complexType>

</xs:schema>
