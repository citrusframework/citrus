<?xml version="1.0" encoding="UTF-8"?>
<spring:beans xmlns="http://www.citrusframework.org/schema/testcase" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.citrusframework.org/schema/testcase http://www.citrusframework.org/schema/testcase/citrus-testcase.xsd">
    <testcase name="JmsCommunicationIT">
        <meta-info>
            <author>Christoph Deppisch</author>
            <creationdate>2009-09-01</creationdate>
            <status>FINAL</status>
            <last-updated-by>Christoph Deppisch</last-updated-by>
            <last-updated-on>2009-09-01T00:00:00</last-updated-on>
        </meta-info>

        <variables>
            <variable name="correlationId" value="citrus:randomNumber(10)"></variable>
            <variable name="messageId" value="citrus:randomNumber(10)"></variable>
            <variable name="user" value="Christoph"></variable>
        </variables>
        <actions>
            <send endpoint="helloServiceJmsEndpoint">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <data>
                        <![CDATA[
                           <HelloRequest xmlns="http://citrusframework.org/schemas/samples/HelloService.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
                </description>
                <message>
                    <data>
                        <![CDATA[
                            <HelloResponse xmlns="http://citrusframework.org/schemas/samples/HelloService.xsd">
                                <MessageId>${messageId}</MessageId>
                                <CorrelationId>${correlationId}</CorrelationId>
                                <User>HelloService</User>
                                <Text>Hello ${user}</Text>
                            </HelloResponse>
                        ]]>
                    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                </description>
                <message>
                    <resource file="classpath:org/citrusframework/citrus/jms/integration/helloRequest.xml"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
                </description>
                <message>
                    <resource file="classpath:org/citrusframework/citrus/jms/integration/helloResponse.xml"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                    Use Groovy MarkupBuilder script for building the XML message
                </description>
                <message>
                    <builder type="groovy">
                        markupBuilder.HelloRequest(xmlns: 'http://citrusframework.org/schemas/samples/HelloService.xsd'){
                            MessageId('${messageId}')
                            CorrelationId('${correlationId}')
                            User('${user}')
                            Text('Hello TestFramework')
                        }
				    </builder>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
                    Use Groovy MarkupBuilder script for building the XML message
                </description>
                <message>
                    <builder type="groovy">
                        markupBuilder.HelloResponse(xmlns: 'http://citrusframework.org/schemas/samples/HelloService.xsd'){
                            MessageId('${messageId}')
                            CorrelationId('${correlationId}')
                            User('HelloService')
                            Text('Hello ${user}')
                        }
                    </builder>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                    Use Groovy MarkupBuilder script for building the XML message
                </description>
                <message>
                    <builder type="groovy" file="classpath:org/citrusframework/citrus/jms/integration/helloRequest.groovy"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
                    Use Groovy MarkupBuilder script for building the XML message
                </description>
                <message>
                    <builder type="groovy" file="classpath:org/citrusframework/citrus/jms/integration/helloResponse.groovy"/>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
            	<description>
            		Send asynchronous hello request: TestFramework -> HelloService
            	</description>
                <message>
                    <data>
                        <![CDATA[
					       <HelloRequest xmlns="http://citrusframework.org/schemas/samples/HelloService.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>
						]]>
				    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
            		Use Groovy XmlSlurper validation script for validating the received XML message
                </description>
                <message>
                    <validate>
                        <script type="groovy">
                          assert root.children().size() == 4
                          assert root.MessageId.text() == '${messageId}'
                          assert root.CorrelationId.text() == '${correlationId}'
                          assert root.User.text() == 'HelloService'
                          assert root.Text.text() == 'Hello ' + context.getVariable("user")
                        </script>
                    </validate>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
            	<description>
            		Send asynchronous hello request: TestFramework -> HelloService
            	</description>
                <message>
                    <data>
                        <![CDATA[
					       <HelloRequest xmlns="http://citrusframework.org/schemas/samples/HelloService.xsd">
                               <MessageId>${messageId}</MessageId>
                               <CorrelationId>${correlationId}</CorrelationId>
                               <User>${user}</User>
                               <Text>Hello TestFramework</Text>
                           </HelloRequest>
						]]>
				    </data>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
            		Use Groovy XmlSlurper validation script for validating the received XML message
                </description>
                <message>
                    <validate>
                        <script type="groovy"
                                file="classpath:org/citrusframework/citrus/jms/integration/helloValidationScript.groovy"/>
                    </validate>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="helloServiceJmsEndpoint">
                <description>
                    Send asynchronous hello request: TestFramework -> HelloService
                    Use payload instead of data element, without CDATA area
                </description>
                <message>
                    <payload>
                        <hlo:HelloRequest xmlns:hlo="http://citrusframework.org/schemas/samples/HelloService.xsd">
                            <hlo:MessageId>${messageId}</hlo:MessageId>
                            <hlo:CorrelationId>${correlationId}</hlo:CorrelationId>
                            <hlo:User>${user}</hlo:User>
                            <hlo:Text>Hello TestFramework</hlo:Text>
                        </hlo:HelloRequest>
                    </payload>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </send>

            <receive endpoint="helloServiceResponseJmsEndpoint" timeout="5000">
                <description>
                    Receive asynchronous hello response: HelloService -> TestFramework
                    Use payload instead of data element, without CDATA area
                </description>
                <message>
                    <payload>
                        <hlo:HelloResponse xmlns:hlo="http://citrusframework.org/schemas/samples/HelloService.xsd">
                            <hlo:MessageId>${messageId}</hlo:MessageId>
                            <hlo:CorrelationId>${correlationId}</hlo:CorrelationId>
                            <hlo:User>HelloService</hlo:User>
                            <hlo:Text>Hello ${user}</hlo:Text>
                        </hlo:HelloResponse>
                    </payload>
                </message>
                <header>
                    <element name="Operation" value="sayHello"/>
                    <element name="CorrelationId" value="${correlationId}"/>
                </header>
            </receive>

            <send endpoint="testMessageSender">
                <message>
                    <payload>
                        <trq:TestRequest xmlns:trq="http://www.consol.de/schemas/test.xsd">
                            <Message>Hello</Message>
                        </trq:TestRequest>
                    </payload>
                </message>
            </send>

            <receive endpoint="testMessageReceiver" timeout="5000">
                <message schema-validation="false">
                    <data>
                      <![CDATA[
                        <trq:TestRequest xmlns:trq="http://www.consol.de/schemas/test.xsd">
                            <Message>Hello</Message>
                        </trq:TestRequest>
                      ]]>
                    </data>
                </message>
            </receive>

            <send endpoint="testMessageSender">
                <message>
                    <data>
                      <![CDATA[
                        <trq:TestRequest xmlns:trq="http://www.consol.de/schemas/test.xsd">
                            <Message>Hello</Message>
                        </trq:TestRequest>
                      ]]>
                    </data>
                </message>
            </send>

            <receive endpoint="testMessageReceiver" timeout="5000">
                <message schema-validation="false">
                    <payload>
                        <trq:TestRequest xmlns:trq="http://www.consol.de/schemas/test.xsd">
                            <Message>Hello</Message>
                        </trq:TestRequest>
                    </payload>
                </message>
            </receive>
        </actions>
    </testcase>
</spring:beans>
