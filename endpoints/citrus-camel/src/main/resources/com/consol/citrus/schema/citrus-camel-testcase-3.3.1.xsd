<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2006-2015 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://www.citrusframework.org/schema/camel/testcase"
           xmlns:camel="http://camel.apache.org/schema/spring"
           targetNamespace="http://www.citrusframework.org/schema/camel/testcase"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

  <xs:import namespace="http://camel.apache.org/schema/spring"
             schemaLocation="http://camel.apache.org/schema/spring/camel-spring.xsd" />

  <xs:element name="description" type="xs:string"/>

  <xs:element name="create-routes">
    <xs:annotation>
      <xs:documentation>Creates new Camel routes on the fly</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element ref="camel:routeContext"/>
      </xs:sequence>
      <xs:attribute name="camel-context" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="start-routes">
    <xs:annotation>
      <xs:documentation>Start Camel routes on context</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element name="route" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="id" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="camel-context" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="stop-routes">
    <xs:annotation>
      <xs:documentation>Start Camel routes on context</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element name="route" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="id" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="camel-context" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="remove-routes">
    <xs:annotation>
      <xs:documentation>Start Camel routes on context</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:element name="route" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="id" use="required"/>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:attribute name="camel-context" type="xs:string"/>
    </xs:complexType>
  </xs:element>

  <xs:element name="control-bus">
    <xs:annotation>
      <xs:documentation>Executes operations on Camel control bus</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="description" minOccurs="0"/>
        <xs:choice>
          <xs:element name="route">
            <xs:complexType>
              <xs:attribute name="id" type="xs:string" use="required"/>
              <xs:attribute name="action" use="required">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="start"/>
                    <xs:enumeration value="stop"/>
                    <xs:enumeration value="suspend"/>
                    <xs:enumeration value="resume"/>
                    <xs:enumeration value="status"/>
                    <xs:enumeration value="stats"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element name="language">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:string">
                  <xs:attribute name="type" type="xs:string" default="simple"/>
                </xs:extension>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
        </xs:choice>
        <xs:element name="result" type="xs:string" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="camel-context" type="xs:string"/>
    </xs:complexType>
  </xs:element>

</xs:schema>
